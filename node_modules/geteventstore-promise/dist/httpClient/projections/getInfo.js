"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _debug = _interopRequireDefault(require("debug"));

var _assert = _interopRequireDefault(require("assert"));

var debug = (0, _debug["default"])('geteventstore:getProjectionInfo');
var baseErr = 'Get Projection Info - ';

var _default = function _default(getAllProjectionsInfo) {
  return (/*#__PURE__*/function () {
      var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(name) {
        var projectionsInfo, projectionInfo;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                (0, _assert["default"])(name, "".concat(baseErr, "Name not provided"));
                _context.next = 3;
                return getAllProjectionsInfo();

              case 3:
                projectionsInfo = _context.sent;
                projectionInfo = projectionsInfo.projections.find(function (projection) {
                  return projection.name === name;
                });
                debug('', 'Projection Info: %j', projectionInfo);
                return _context.abrupt("return", projectionInfo);

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }()
  );
};

exports["default"] = _default;
module.exports = exports.default;